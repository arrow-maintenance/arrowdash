## Row 

### Column
```{r}
#| echo: false
library(ggplot2)
library(readr)
monthly_commit_counts <- readr::read_csv("./data/monthly_commit_counts.csv") %>%
  mutate(date = as.Date(paste0(month, "-01"))) %>%
  filter(date > as.Date("2024-04-01")) %>%
  filter(date < floor_date(Sys.Date(), "month")) %>%
  arrange(date)

ggplot(monthly_commit_counts, aes(x = date)) +
  geom_line(aes(y = commit_count, color = "Raw values"), linewidth = 1) +
  geom_smooth(aes(y = commit_count, color = "Trend line"), span = 1.1, method = "loess", se = FALSE, linewidth = 1, linetype = "dashed") +
  scale_color_manual(values = c("Raw values" = "grey", "Trend line" = "blue")) +
  scale_x_date(
    date_labels = "%b %Y", 
    date_breaks = "1 month",
    limits = c(min(monthly_commit_counts$date), max(monthly_commit_counts$date)),
    expand = c(0,0)
  ) +
  labs(
    title = "Apache Arrow GitHub Commits by Month",
    x = "Month",
    y = "Number of Commits"
  ) +
  theme_minimal() +
  theme(
    axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
    panel.grid.minor = element_blank(),
    panel.grid.major.x = element_blank()
  ) 

```

### Column 

#### Row

##### Column
```{r}
#| echo: false
library(ggplot2)
library(readr)
library(dplyr)
library(lubridate)
library(stringr)

plot_monthly_activity <- function(opened_path, closed_path, title) {
  # Try daily files first, fall back to weekly if they don't exist
  opened_daily <- str_replace(opened_path, "\\.csv$", "_daily.csv")
  closed_daily <- str_replace(closed_path, "\\.csv$", "_daily.csv")
  
  if (file.exists(opened_daily) && file.exists(closed_daily)) {
    # Use daily data
    opened <- read_csv(opened_daily, col_types = cols(date = col_date(), n = col_integer())) %>%
      mutate(type = "Opened") %>%
      rename(date_col = date)
    closed <- read_csv(closed_daily, col_types = cols(date = col_date(), n = col_integer())) %>%
      mutate(type = "Closed") %>%
      rename(date_col = date)
  } else {
    # Fall back to weekly data  
    opened <- read_csv(opened_path, col_types = cols(week_start = col_date(), n = col_integer())) %>%
      mutate(type = "Opened") %>%
      rename(date_col = week_start)
    closed <- read_csv(closed_path, col_types = cols(week_start = col_date(), n = col_integer())) %>%
      mutate(type = "Closed") %>%
      rename(date_col = week_start)
  }
  
  data <- bind_rows(opened, closed) %>%
    filter(date_col >= (today() - months(18))) %>%
    mutate(month = floor_date(date_col, "month")) %>%
    group_by(month, type) %>%
    summarise(n = sum(n), .groups = "drop") %>%
    filter(month <= floor_date(Sys.Date(), "month")) 

  ggplot(data, aes(x = month, y = n, color = type)) +
    geom_line(linewidth = 1) +
    scale_color_manual(values = c("Opened" = "#9b59b6", "Closed" = "#27ae60")) +
    scale_x_date(date_labels = "%b %Y", date_breaks = "1 month") +
    labs(
      title = title,
      x = "Month",
      y = "Count",
      color = NULL
    ) +
    theme_minimal() +
    theme(
      axis.text.x = element_text(angle = 45, hjust = 1, size = 10),
      panel.grid.minor = element_blank(),
      panel.grid.major.x = element_blank()
    )
}
```
```{r}
#| echo: false
plot_monthly_activity(
  opened_path = "./data/prs_opened.csv",
  closed_path = "./data/prs_closed.csv",
  title = "PRs"
)
```

##### Column

```{r}
#| echo: false
plot_monthly_activity(
  opened_path = "./data/issues_opened.csv",
  closed_path = "./data/issues_closed.csv",
  title = "Issues"
)
```
## Row

```{r}
#| echo: false
library(ggplot2)
library(readr)
library(tidyr)

# Load data
open_counts <- read_csv("data/open_counts.csv", col_types = cols(
  date = col_date(),
  open_issues = col_integer(),
  open_prs = col_integer()
))

current_issues <- open_counts %>%
  filter(date == max(date)) %>%
  pull(open_issues)

month_ago_issues <- open_counts %>%
  filter(date == max(date) - months(1)) %>%
  pull(open_issues)

current_prs <- open_counts %>%
  filter(date == max(date)) %>%
  pull(open_prs)

month_ago_prs <- open_counts %>%
  filter(date == max(date) - months(1)) %>%
  pull(open_prs)

change_issues <- current_issues - month_ago_issues
change_prs <- current_prs - month_ago_prs

get_sign_string <- function(x){
  switch (as.character(sign(x)),
    "1" = paste0("+", x),
    "0" = paste0("+", x),
    "-1" = paste(x),
    ""
  )
}
```


```{r}
library(bslib)
library(bsicons)
value_box(
  title = "Open Issues (and change since 1 month ago)",
  showcase = bsicons::bs_icon("chat"),
  theme = "primary",
  value = glue::glue("{current_issues} ({get_sign_string(change_issues)})")
)
```

```{r}
value_box(
  title = "Open PRs (and change since 1 month ago)",
  showcase = bsicons::bs_icon("pencil"),
  theme = "primary",
  value = glue::glue("{current_prs} ({get_sign_string(change_prs)})")
)

```

